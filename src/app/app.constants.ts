import { environment } from './../environments/environment';

function createUrl(actionName: string): string {
	return `${environment.apiHost}${actionName}`;
}
function createAuthUrl(actionName: string): string {
	return `${environment.apiHost}${actionName}`;
}

export const appApiResources = {
	baseUrl: environment.apiHost,
	staticUploadsPath: `${environment.apiHost}Uploads/`,
	login: createAuthUrl('auth/token'),
	logout: createUrl('logout'),
	getUserProfile: createUrl('user/getProfile'),
	getCompany: createUrl('superCompanyList'),
	addCompany: createUrl('superCompanyRegister'),
	changePassword: createUrl('user/changePassword'),
	boutiqueRegistration: createUrl('getCompanyRegisterDetails'),
	getTextDetail: createUrl('getCompanyTaxDetails'),
	saveTextDetail: createUrl('saveCompanyTaxDetails'),
	saveCompanyRegisterDetails: createUrl('saveCompanyRegisterDetails'),
	getCompanyDetails: createUrl('getSuperCompanyDetail'),
	saveCustoms: createUrl('saveCompanyCustomsDetails'),
	getCustoms: createUrl('getCompanyCustomsDetails'),
	updateDocuments: createUrl('typeWiseDocumentUpdate'),
	getBankDetail: createUrl('getCompanyBankDetails'),
	saveBankDetail: createUrl('saveCompanyBankDetails'),
	deleteBankDetail: createUrl('deleteCompanyBankDetails'),
	getCompanyUserList: createUrl('companyUserList'),
	deleteCompanyStoreDetail: createUrl('delete-store'),
	getCompanyProfile: createUrl('getCompanyProfileDetail'),
	saveCompanyProfile: createUrl('saveCompanyProfileDetail'),
	getCompanyStoreList: createUrl('getStoreListing'),
	getStoreList: createUrl('getStoreDetails'),
	saveStoreList: createUrl('saveStoreDetails'),
	changeCompanyLogo: createUrl('typeWiseLogoUpdate'),
	getCompanyAllPermissionWithRole: createUrl('getCompanyAllPermissionWithRoles'),
	saveCompanyUserDetail: createUrl('saveCompanyUserDetail'),
	getCompanyUserDetail: createUrl('getCompanyUserDetail'),
	getReadNotification: createUrl('getReadNotification'),
	getUnReadNotification: createUrl('getUnReadNotification'),
	setReadNotification: createUrl('setReadNotification'),
	changeStoreLogo: createUrl('typeWiseLogoUpdate'),
	getUserPermission: createUrl('getUserPermission'),
	editColor: createUrl('colors/{id}'),
	saveColor: createUrl('colors'),
	getColor: createUrl('colors?page={id}'),
	getAllProductByFilter: createUrl('getProductsList'),
	getAllCategoryByFilter: createUrl('getCategoryByFilter'),
	deleteColorImage: createUrl('colors/deleteColorImage'),
	materials: createUrl('materials?page={id}'),
	saveUpdateMaterials: createUrl('materials'),
	deleteMmaterialImage: createUrl('materials/deleteMaterialImage'),
	getAllProductBrand: createUrl('brands'),
	getMainCategory: createUrl('getMainCategories'),
	getSubCategory: createUrl('getCategoryDetails'),
	getBoutiqueBrands: createUrl('brands/getBoutiqueBrands'),
	getAllColors: createUrl('colors'),
	getAllMaterials: createUrl('materials'),
	saveBrand: createUrl('brands'),
	getBrandId: createUrl('brands/{id}'),
	deleteBrandImageById: createUrl('brands/deleteBrandImage'),
	deleteBrandById: createUrl('brands/{id}'),
	getCategoryDataById: createUrl('getCategoryDetails'),
	saveCategory: createUrl('saveCategory'),
	singleImageUpload: createUrl('addCategoryImage'),
	deleteSingleImage: createUrl('deleteCategoryImage'),
	saveProduct: createUrl('saveProductsDetails'),
	getProductDetails: createUrl('getProductsDetail'),
	getProductInventory: createUrl('getProductInventory'),
	saveProductInventory: createUrl('saveProductInventory'),
	deleteProduct: createUrl('deleteProduct'),
	deleteColorById: createUrl('colors/{id}'),
	deleteCategoryById: createUrl('deleteCategory'),
	deleteInventory: createUrl('deleteProductInventory'),
	deleteMaterial: createUrl('materials/{id}'),
	getBoutiqueUser: createUrl('chatBoutiqueUsers'),
	chatSuperAdminUsers: createUrl('chatSuperAdminUsers'),
	getCompanySearch: createUrl('superCompanyList'),
	addChatUser: createUrl('addChatUser')
};
